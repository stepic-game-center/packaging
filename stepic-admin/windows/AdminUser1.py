# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AdminUser.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import requests
import json
import datetime
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AdminUserWindow(object):
    def setupUi(self, AdminUserWindow):
        AdminUserWindow.setObjectName("AdminUserWindow")
        AdminUserWindow.resize(1200, 800)
        AdminUserWindow.setMinimumSize(QtCore.QSize(500, 500))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../image/游戏.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        AdminUserWindow.setWindowIcon(icon)
        AdminUserWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        AdminUserWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.centralwidget = QtWidgets.QWidget(AdminUserWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.search_Edit = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.search_Edit.sizePolicy().hasHeightForWidth())
        self.search_Edit.setSizePolicy(sizePolicy)
        self.search_Edit.setMinimumSize(QtCore.QSize(21, 31))
        self.search_Edit.setMaximumSize(QtCore.QSize(16777215, 31))
        self.search_Edit.setObjectName("search_Edit")
        self.gridLayout.addWidget(self.search_Edit, 0, 1, 1, 1)
        self.menu_Button = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.menu_Button.sizePolicy().hasHeightForWidth())
        self.menu_Button.setSizePolicy(sizePolicy)
        self.menu_Button.setMinimumSize(QtCore.QSize(201, 31))
        self.menu_Button.setMaximumSize(QtCore.QSize(201, 31))
        self.menu_Button.setIcon(icon)
        self.menu_Button.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.menu_Button.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.menu_Button.setObjectName("menu_Button")

        self.menu_Button.setAutoRaise(True)
        self.menu = QtWidgets.QMenu()

        self.logout = QtWidgets.QAction('注销帐户:', parent=self.menu)
        self.exit_button = QtWidgets.QAction('退出系统', parent=self.menu)

        self.menu.addAction(self.logout)
        self.menu.addSeparator()
        self.menu.addAction(self.exit_button)
        self.menu_Button.setMenu(self.menu)

        self.gridLayout.addWidget(self.menu_Button, 0, 4, 1, 1, QtCore.Qt.AlignRight|QtCore.Qt.AlignTop)
        self.logo = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.logo.sizePolicy().hasHeightForWidth())
        self.logo.setSizePolicy(sizePolicy)
        self.logo.setMinimumSize(QtCore.QSize(350, 200))
        self.logo.setMaximumSize(QtCore.QSize(350, 200))
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("../image/游戏大logo.png"))
        self.logo.setAlignment(QtCore.Qt.AlignCenter)
        self.logo.setObjectName("logo")
        self.gridLayout.addWidget(self.logo, 0, 0, 1, 1)
        self.user_table = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(6)
        sizePolicy.setHeightForWidth(self.user_table.sizePolicy().hasHeightForWidth())
        self.user_table.setSizePolicy(sizePolicy)
        self.user_table.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.user_table.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.user_table.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.user_table.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.user_table.setObjectName("user_table")
        self.user_table.setColumnCount(9)
        self.user_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.user_table.setHorizontalHeaderItem(8, item)
        self.gridLayout.addWidget(self.user_table, 1, 0, 1, 5)

        self.user_table.setItemDelegateForColumn(0, EmptyDelegate(self))
        self.user_table.setItemDelegateForColumn(1, EmptyDelegate(self))
        self.user_table.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)

        self.man_radio = QtWidgets.QRadioButton()
        self.woman_radio = QtWidgets.QRadioButton()
        self.birthday_Edit = QtWidgets.QDateEdit()
        self.delete_button = QtWidgets.QPushButton()
        self.update_button = QtWidgets.QPushButton()
        self.man_radio = []
        self.woman_radio = []
        self.birthday_Edit = []
        self.delete_button = []
        self.update_button = []
        url = 'http://106.13.236.185:5000/api/user/query_all'
        res = requests.post(url=url, data='')
        if res.text != 'empty':
            self.user_table.verticalHeader().setVisible(False)
            users = json.loads(res.text)
            index = 0
            for user in users:
                self.user_table.setRowCount(index + 1)
                item = QtWidgets.QTableWidgetItem(str(user['uid']))
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.user_table.setItem(index, 0, item)
                item = QtWidgets.QTableWidgetItem(user['uname'])
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.user_table.setItem(index, 1, item)
                item = QtWidgets.QTableWidgetItem(user['unick'])
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.user_table.setItem(index, 2, item)
                frame = QtWidgets.QFrame()
                frame.setObjectName('sex_frame_' + str(index))
                layout = QtWidgets.QVBoxLayout(frame)
                man_radio = QtWidgets.QRadioButton(frame)
                man_radio.setObjectName('man_radio_' + str(index))
                man_radio.setText('男')
                man_radio.id = index
                man_radio.user = user
                layout.addWidget(man_radio, 0, QtCore.Qt.AlignVCenter)
                self.man_radio.append(man_radio)
                woman_radio = QtWidgets.QRadioButton(frame)
                woman_radio.setObjectName('woman_radio_' + str(index))
                woman_radio.setText('女')
                woman_radio.id = index
                woman_radio.user = user
                layout.addWidget(woman_radio, 0, QtCore.Qt.AlignVCenter)
                self.woman_radio.append(woman_radio)
                self.user_table.setCellWidget(index, 3, frame)
                if user['sex'] == '男':
                    man_radio.setChecked(True)
                elif user['sex'] == '女':
                    woman_radio.setChecked(True)
                else:
                    man_radio.setChecked(False)
                    woman_radio.setChecked(False)
                item = QtWidgets.QTableWidgetItem(user['phone'])
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.user_table.setItem(index, 4, item)
                frame_2 = QtWidgets.QFrame()
                layout_2 = QtWidgets.QVBoxLayout(frame_2)
                birthday_edit = QtWidgets.QDateEdit(frame_2)
                birthday_edit.setObjectName('birthday_Edit_' + str(index))
                birthday_edit.setFixedHeight(40)
                layout_2.addWidget(birthday_edit, 0, QtCore.Qt.AlignVCenter)
                self.user_table.setCellWidget(index, 5, frame_2)
                if user['birthday'] != None:
                    birthday = datetime.datetime.strptime(user['birthday'], '%Y-%m-%d').date()
                    birthday_edit.setDate(birthday)
                else:
                    birthday = datetime.datetime.strptime('2000-01-01', '%Y-%m-%d').date()
                    birthday_edit.setDate(birthday)
                birthday_edit.id = index
                birthday_edit.user = user
                self.birthday_Edit.append(birthday_edit)
                item = QtWidgets.QTableWidgetItem(str(user['exper']))
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.user_table.setItem(index, 6, item)
                item = QtWidgets.QTableWidgetItem(user['intro'])
                item.setTextAlignment(QtCore.Qt.AlignLeft)
                self.user_table.setItem(index, 7, item)
                self.user_table.setRowHeight(index, 90)
                frame_1 = QtWidgets.QFrame()
                layout_1 = QtWidgets.QVBoxLayout(frame_1)
                delete_button = QtWidgets.QPushButton(frame_1)
                delete_button.setText('删除')
                delete_button.setObjectName('delete_button_' + str(index))
                delete_button.user = user
                delete_button.id = index
                self.delete_button.append(delete_button)
                layout_1.addWidget(delete_button, 0, QtCore.Qt.AlignVCenter)
                update_button = QtWidgets.QPushButton(frame_1)
                update_button.setText('修改')
                update_button.setObjectName('update_button_' + str(index))
                update_button.user = user
                update_button.id = index
                self.update_button.append(update_button)
                layout_1.addWidget(update_button, 0, QtCore.Qt.AlignVCenter)
                self.user_table.setCellWidget(index, 8, frame_1)
                index += 1

        self.search_Button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.search_Button.sizePolicy().hasHeightForWidth())
        self.search_Button.setSizePolicy(sizePolicy)
        self.search_Button.setMinimumSize(QtCore.QSize(31, 31))
        self.search_Button.setMaximumSize(QtCore.QSize(31, 31))
        self.search_Button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.search_Button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../image/search.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search_Button.setIcon(icon1)
        self.search_Button.setObjectName("search_Button")
        self.gridLayout.addWidget(self.search_Button, 0, 2, 1, 1)
        AdminUserWindow.setCentralWidget(self.centralwidget)

        self.setWindowOpacity(0.95)  # 设置窗口透明度
        self.setAttribute(QtCore.Qt.WA_TranslucentBackground)  # 设置窗口背景透明
        # self.setWindowFlag(QtCore.Qt.FramelessWindowHint)  # 隐藏边框

        self.retranslateUi(AdminUserWindow)
        QtCore.QMetaObject.connectSlotsByName(AdminUserWindow)

    def retranslateUi(self, AdminUserWindow):
        _translate = QtCore.QCoreApplication.translate
        AdminUserWindow.setWindowTitle(_translate("AdminUserWindow", "Stepic 管理员管理用户界面"))
        self.menu_Button.setText(_translate("AdminUserWindow", "..."))
        item = self.user_table.horizontalHeaderItem(0)
        item.setText(_translate("AdminUserWindow", "用户ID"))
        item = self.user_table.horizontalHeaderItem(1)
        item.setText(_translate("AdminUserWindow", "用户名"))
        item = self.user_table.horizontalHeaderItem(2)
        item.setText(_translate("AdminUserWindow", "用户昵称"))
        item = self.user_table.horizontalHeaderItem(3)
        item.setText(_translate("AdminUserWindow", "用户性别"))
        item = self.user_table.horizontalHeaderItem(4)
        item.setText(_translate("AdminUserWindow", "用户电话"))
        item = self.user_table.horizontalHeaderItem(5)
        item.setText(_translate("AdminUserWindow", "用户生日"))
        item = self.user_table.horizontalHeaderItem(6)
        item.setText(_translate("AdminUserWindow", "经验值"))
        item = self.user_table.horizontalHeaderItem(7)
        item.setText(_translate("AdminUserWindow", "个人简介"))
        item = self.user_table.horizontalHeaderItem(8)
        item.setText(_translate("AdminUserWindow", "操作"))


class EmptyDelegate(QtWidgets.QItemDelegate):
    def __init__(self, parent):
        super(EmptyDelegate, self).__init__(parent)

    def createEditor(self, QWidget, QStyleOptionViewItem, QModelIndex):
        return None
