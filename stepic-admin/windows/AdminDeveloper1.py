# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AdminDeveloper.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import requests
import json
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AdminDeveloperWindow(object):
    def setupUi(self, AdminDeveloperWindow):
        AdminDeveloperWindow.setObjectName("AdminDeveloperWindow")
        AdminDeveloperWindow.resize(800, 600)
        AdminDeveloperWindow.setMinimumSize(QtCore.QSize(500, 500))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../image/游戏.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        AdminDeveloperWindow.setWindowIcon(icon)
        AdminDeveloperWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        AdminDeveloperWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.centralwidget = QtWidgets.QWidget(AdminDeveloperWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.logo = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.logo.sizePolicy().hasHeightForWidth())
        self.logo.setSizePolicy(sizePolicy)
        self.logo.setMinimumSize(QtCore.QSize(350, 200))
        self.logo.setMaximumSize(QtCore.QSize(350, 200))
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("../image/游戏大logo.png"))
        self.logo.setAlignment(QtCore.Qt.AlignCenter)
        self.logo.setObjectName("logo")
        self.gridLayout.addWidget(self.logo, 0, 0, 1, 1)
        self.developer_table = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(6)
        sizePolicy.setHeightForWidth(self.developer_table.sizePolicy().hasHeightForWidth())
        self.developer_table.setSizePolicy(sizePolicy)
        self.developer_table.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.developer_table.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.developer_table.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.developer_table.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.developer_table.setObjectName("developer_table")
        self.developer_table.setColumnCount(5)
        self.developer_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.developer_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.developer_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.developer_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.developer_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.developer_table.setHorizontalHeaderItem(4, item)

        self.developer_table.setItemDelegateForColumn(0, EmptyDelegate(self))
        self.developer_table.setItemDelegateForColumn(1, EmptyDelegate(self))
        self.developer_table.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)

        self.delete_button = QtWidgets.QPushButton()
        self.update_button = QtWidgets.QPushButton()
        self.delete_button = []
        self.update_button = []
        url = 'http://106.13.236.185:5000/api/developer/query_all'
        res = requests.post(url=url, data='')
        if res.text != 'empty':
            self.developer_table.verticalHeader().setVisible(False)
            developers = json.loads(res.text)
            index = 0
            for developer in developers:
                self.developer_table.setRowCount(index + 1)
                item = QtWidgets.QTableWidgetItem(str(developer['did']))
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.developer_table.setItem(index, 0, item)
                item = QtWidgets.QTableWidgetItem(developer['dname'])
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.developer_table.setItem(index, 1, item)
                item = QtWidgets.QTableWidgetItem(developer['dnick'])
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.developer_table.setItem(index, 2, item)
                item = QtWidgets.QTableWidgetItem(developer['dphone'])
                item.setTextAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
                self.developer_table.setItem(index, 3, item)
                frame_1 = QtWidgets.QFrame()
                layout_1 = QtWidgets.QVBoxLayout(frame_1)
                delete_button = QtWidgets.QPushButton(frame_1)
                delete_button.setText('删除')
                delete_button.setObjectName('delete_button_' + str(index))
                delete_button.developer = developer
                delete_button.id = index
                self.delete_button.append(delete_button)
                layout_1.addWidget(delete_button, 0, QtCore.Qt.AlignVCenter)
                update_button = QtWidgets.QPushButton(frame_1)
                update_button.setText('修改')
                update_button.setObjectName('update_button_' + str(index))
                update_button.developer = developer
                update_button.id = index
                self.update_button.append(update_button)
                layout_1.addWidget(update_button, 0, QtCore.Qt.AlignVCenter)
                self.developer_table.setCellWidget(index, 4, frame_1)
                self.developer_table.setRowHeight(index, 90)
                index += 1

        self.gridLayout.addWidget(self.developer_table, 1, 0, 1, 2)
        self.menu_Button = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.menu_Button.sizePolicy().hasHeightForWidth())
        self.menu_Button.setSizePolicy(sizePolicy)
        self.menu_Button.setMinimumSize(QtCore.QSize(201, 31))
        self.menu_Button.setMaximumSize(QtCore.QSize(201, 31))
        self.menu_Button.setIcon(icon)
        self.menu_Button.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.menu_Button.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.menu_Button.setObjectName("menu_Button")

        self.menu_Button.setAutoRaise(True)
        self.menu = QtWidgets.QMenu()

        self.logout = QtWidgets.QAction('注销帐户:', parent=self.menu)
        self.exit_button = QtWidgets.QAction('退出系统', parent=self.menu)

        self.menu.addAction(self.logout)
        self.menu.addSeparator()
        self.menu.addAction(self.exit_button)
        self.menu_Button.setMenu(self.menu)

        self.setWindowOpacity(0.95)  # 设置窗口透明度
        self.setAttribute(QtCore.Qt.WA_TranslucentBackground)  # 设置窗口背景透明
        # self.setWindowFlag(QtCore.Qt.FramelessWindowHint)  # 隐藏边框

        self.gridLayout.addWidget(self.menu_Button, 0, 1, 1, 1, QtCore.Qt.AlignRight|QtCore.Qt.AlignTop)
        AdminDeveloperWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(AdminDeveloperWindow)
        QtCore.QMetaObject.connectSlotsByName(AdminDeveloperWindow)

    def retranslateUi(self, AdminDeveloperWindow):
        _translate = QtCore.QCoreApplication.translate
        AdminDeveloperWindow.setWindowTitle(_translate("AdminDeveloperWindow", "Stepic 管理员管理开发者界面"))
        item = self.developer_table.horizontalHeaderItem(0)
        item.setText(_translate("AdminDeveloperWindow", "开发者ID"))
        item = self.developer_table.horizontalHeaderItem(1)
        item.setText(_translate("AdminDeveloperWindow", "开发者名"))
        item = self.developer_table.horizontalHeaderItem(2)
        item.setText(_translate("AdminDeveloperWindow", "开发者昵称"))
        item = self.developer_table.horizontalHeaderItem(3)
        item.setText(_translate("AdminDeveloperWindow", "开发者电话"))
        item = self.developer_table.horizontalHeaderItem(4)
        item.setText(_translate("AdminDeveloperWindow", "操作"))
        self.menu_Button.setText(_translate("AdminDeveloperWindow", "..."))


class EmptyDelegate(QtWidgets.QItemDelegate):
    def __init__(self, parent):
        super(EmptyDelegate, self).__init__(parent)

    def createEditor(self, QWidget, QStyleOptionViewItem, QModelIndex):
        return None